Without memoization, growth in number of additions seems to grow ~ 2^n.

With memoization, the number of additions required seems to be ~ (n-2).

One way to visualise how the algo works, recursive stream splitting and summing down the columns. (Note that 1s 'split', and 0s proceed to 1s.)
_______________
| | | | | | |0|
| | | | |0|1| |
| | | | | | |1|
| | |0|1| | | |
| | | | | |0|1|
| | | | |1| | |
| | | | | | |0|
| | | | | |1| |
| | | | | | |1|
|0|1| | | | | |
| | | | | |0|1|
| | | |0|1| |0|
| | | | | |1| |
| | | | | | |1|
| | |1| | | |0|
| | | | |0|1| |
| | | |1| | |1|
| | | | | |0|1|
| | | | |1| |0|
| | | | | |1| |
| | | | | | |1|
|_|_|_|_|_|_|_|
|Summation ___|
|0|1|1|2|3|5|8|
|_|_|_|_|_|_|_|
|+ no cache____|
|0|0|1|2|4|8|16|
|+ with cache__|
|0|0|1|1|1|1| 1|
|_|_|_|_|_|_|__|
