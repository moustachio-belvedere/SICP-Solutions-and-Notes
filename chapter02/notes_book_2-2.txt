. Linked list can be constructed via nested calls to `cons`

. Lisp has syntactic sugar for above: `(list a b c ...)`

. `nil` is a contraction of the latin `nihil` (nothing)

. Variadic functions are doable, examples with lambda equivalents:
    with z as `list` argument:
    (define (f x y . z) <body>) <=> (lambda (x y . z) <body>)
    with single `list` argument:
    (define (g . w) <body>) <=> (lambda w <body>)

. Recursion as a natural tool for dealing with tree-like structures

. Thinking of algorithms like a signal processing engineer, with block structures

. "If we could organise our programs to make the signal-flow structure manifest in the procedures we write, this would increase the conceptual clarity of the resulting code."

. Waters (1979) analyzed a bunch of Fortran programs and found that 90% of code could be rewritten in terms of maps, firlters and accumulations!

. racket implementation of map allows (map + (list 1 2) (list 3 4)) = (4 6)
